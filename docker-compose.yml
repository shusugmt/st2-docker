version: '3'

services:
  stackstorm:
    image: stackstorm/stackstorm:${TAG:-latest}
    container_name: stackstorm
    env_file:
      - conf/stackstorm.env
      - conf/mongo.env
      - conf/rabbitmq.env
      - conf/postgres.env
      - conf/redis.env
    ports:
      - "443:443"
    networks:
      - public
      - private
    volumes:
      - stackstorm-packs-volume:/opt/stackstorm/packs
      - stackstorm-virtualenvs-volume:/opt/stackstorm/virtualenvs
      - stackstorm-configs-volume:/opt/stackstorm/configs
      - stackstorm-log-volume:/var/log
    dns_search: .

### External Services

  mongo:
    image: mongo:3.4
    container_name: mongo
    env_file:
      - conf/mongo.env
    networks:
      - private
    volumes:
      - mongo-volume:/data/db
      - mongo-configdb-volume:/data/configdb
    dns_search: .
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    env_file:
      - conf/rabbitmq.env
    networks:
      - private
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    dns_search: .
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - conf/postgres.env
    networks:
      - private
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    dns_search: .
  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - conf/redis.env
    networks:
      - private
    volumes:
      - redis-volume:/data
    dns_search: .
    command: [
      "bash", "-c",
      '
       docker-entrypoint.sh
       --requirepass "$$REDIS_PASSWORD"
      '
    ]

volumes:
  mongo-volume:
  mongo-configdb-volume:
  postgres-volume:
  rabbitmq-volume:
  redis-volume:
  stackstorm-packs-volume:
  stackstorm-virtualenvs-volume:
  stackstorm-configs-volume:
  stackstorm-log-volume:

networks:
  public:
    external: { name: public }
  private:
    external: { name: private }
